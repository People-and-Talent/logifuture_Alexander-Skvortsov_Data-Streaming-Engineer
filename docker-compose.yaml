version: '3.8'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    user: "root:root"
    ports:
      - "9092:9092"       # Internal communication or within Docker network
      - "29092:29092"     # External access from host
    environment:
      KAFKA_HOST: 'kafka'
      KAFKA_PORT: '9092'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'  # Enable automatic topic creation
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CREATE_TOPICS: "transactions_topic:1:1"
    depends_on:
      - zookeeper

    volumes:
      - ./bash_scripts:/scripts
      - kafka-data:/wurstmeister/kafka

    networks:
      - app-network
    restart: on-failure

#  schema-registry:
#    image: confluentinc/cp-schema-registry:latest
#    depends_on:
#      - zookeeper
#      - kafka
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#    ports:
#      - "8081:8081"

  cassandra:
    image: bitnami/cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_PORT='9092'
      - CASSANDRA_KEYSPACE='betting'
      - CASSANDRA_CLUSTER_NAME=CassandraCluster
      - CASSANDRA_LISTEN_ADDRESS=cassandra
      - CASSANDRA_BROADCAST_ADDRESS=cassandra
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_ENDPOINT_SNITCH=SimpleSnitch
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra

    volumes:
      - cassandra-data:/var/lib/cassandra
      - ./db_scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network


  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-master
    environment:
      - CHECK_POINT_LOC_CASSANDRA='/opt/app/tmp/cassandra_checkpoint'
      - SPARK_MODE=master
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - app-network
    volumes:
      - ./data:/opt/spark-data
      - ./spark_scripts:/opt/app/spark_scripts

    command: /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.master.Master


  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-worker
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_MODE=worker
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark-master

    volumes:
      - ./data:/opt/spark-data
      - ./spark_scripts:/opt/spark_scripts

    networks:
      - app-network

    command: /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077


  spark-job:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-job
    networks:
      - app-network
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      SPARK_MASTER_URL: spark://spark-master:7077
      CASSANDRA_USERNAME: cassandra
      CASSANDRA_PASSWORD: cassandra
    depends_on:
      - spark-master
      - kafka
      - cassandra
    volumes:
      - ./spark_scripts:/opt/spark_scripts
      - ./spark_scripts/tmp:/opt/spark_scripts/tmp

    command: /opt/bitnami/spark/bin/spark-submit --packages org.apache.spark:spark-streaming-kafka-0-10_2.12:3.5.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1,com.datastax.spark:spark-cassandra-connector_2.12:3.5.0 --master spark://spark-master:7077 /opt/spark_scripts/spark_all_tasks.py
#    restart: on-failure


  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:80"
    networks:
      - app-network
    depends_on:
      - cassandra
    environment:
      CASSANDRA_USERNAME: cassandra
      CASSANDRA_PASSWORD: cassandra
      WAIT_HOSTS: cassandra:9042

networks:
  app-network:
    driver: bridge

volumes:
  kafka-data:
  cassandra-data:
